import{T as t,O as m}from"./OrbitControls.b0c8d7dc.js";import{s as u}from"./stone.ad442dd6.js";import{d as x,r as f,o as M,c as w,F as v}from"./index.9d5ed231.js";const S=x({setup:(L,R)=>{const r=new t.LoadingManager;r.onStart=()=>{console.log("start-manager")},r.onLoad=()=>{console.log("loaded-manager")},r.onProgress=()=>{console.log("process-manager")},r.onError=()=>{console.log("error-manager")};const n=new t.TextureLoader(r).load(u);n.repeat.x=2,n.repeat.y=3,n.wrapS=t.MirroredRepeatWrapping,n.wrapT=t.MirroredRepeatWrapping,n.offset.x=.5,n.offset.y=.5,n.rotation=Math.PI*.25,n.center.x=.5,n.center.y=.5;const d=f(),s=new t.Scene,o={width:window.innerWidth,height:window.innerHeight},p=new t.BoxGeometry(1,1,1),g=new t.MeshBasicMaterial({map:n}),h=new t.Mesh(p,g);s.add(h);const l=new t.AxesHelper(1);s.add(l);const a=new t.PerspectiveCamera(75,o.width/o.height,.1,100);a.position.set(0,1,2),s.add(a);let e,i;M(()=>{e=new t.WebGLRenderer({canvas:d.value}),e.setSize(o.width,o.height),i=new m(a,e.domElement),i.enableDamping=!0}),window.addEventListener("resize",()=>{o.width=window.innerWidth,o.height=window.innerHeight,a.aspect=o.width/o.height,a.updateProjectionMatrix(),e==null||e.setSize(o.width,o.height),e==null||e.setPixelRatio(Math.min(window.devicePixelRatio,2))});const c=()=>{window.requestAnimationFrame(c),i==null||i.update(),e==null||e.render(s,a)};return c(),()=>w(v,null,[w("canvas",{ref:d},null)])}});export{S as default};
